name: Build and Release all packages in the repo

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      release:
        description: "Create a release (true/false)"
        default: "true"

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions: write-all
    container:
      image: "alpine:latest"
      options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download latest AliceLinux
        run: |
          set -x

          apk update
          apk upgrade
          apk add xz

          # Get the latest release tag from Codeberg
          LATEST_TAG="$(wget -qO- https://codeberg.org/api/v1/repos/emmett1/alicelinux/releases/latest | grep -o '"tag_name":"[^"]*' | cut -d'"' -f4)"

          mkdir ./alice
          wget -qO- "https://codeberg.org/emmett1/alicelinux/releases/download/${LATEST_TAG}/alicelinux-rootfs-${LATEST_TAG}.tar.xz" | tar xJvf - -C ./alice

          # Enter chroot and perform required operations
          ./alice/usr/bin/apkg-chroot ./alice sh -s <<'EOF'
          echo "Welcome to AliceLinux"

          # Set up repositories
          git clone --depth=1 https://codeberg.org/emmett1/alicelinux /var/lib/alicelinux
          mkdir -p /var/cache/pkg
          mkdir -p /var/cache/src
          mkdir -p /var/cache/work

          echo 'export CFLAGS="-O2 -march=x86-64-v3 -pipe"' >> /etc/apkg.conf
          echo 'export CXXFLAGS="$CFLAGS"' >> /etc/apkg.conf
          echo 'export MAKEFLAGS="-j$(nproc)"' >> /etc/apkg.conf
          echo 'export NINJAJOBS="$(nproc)"' >> /etc/apkg.conf
          echo 'APKG_REPO="/var/lib/alicelinux/repos/core /var/lib/alicelinux/repos/extra /var/lib/alicelinux/repos/wayland /var/lib/alicelinux/repos/xorg"' >> /etc/apkg.conf
          echo 'APKG_PACKAGE_DIR=/var/cache/pkg' >> /etc/apkg.conf
          echo 'APKG_SOURCE_DIR=/var/cache/src' >> /etc/apkg.conf
          echo 'APKG_WORK_DIR=/var/cache/work' >> /etc/apkg.conf

          echo "xplshn/alicelinux" > /etc/hostname

          # Enter non-interactive mode
          export APKG_NOPROMPT=1

          # Sync repos, update installed packages, install build packages, install all available packages, check orphaned packages, clean up old cached files that mustn't be uploaded
          time apkg-reposync
          time apkg -U || true
          time apkg -I meson cmake pkgconf libtool automake perl ccache || true
          time apkg -I $(apkg -s) || true
          time revdep -v || true
          time apkg-clean || true
          EOF
          
          # Move packages to workspace
          mkdir -p ${{ github.workspace }}/packages
          cp ./alice/var/cache/pkg/*.spm ${{ github.workspace }}/packages

      - name: Verify Package Files
        run: |
          if ! ls ${{ github.workspace }}/packages/*.spm >/dev/null 2>&1; then
            echo "No packages found in \"${{ github.workspace }}/packages/*.spm\". Exiting."
            exit 1
          fi

      - name: Upload package artifacts
        if: ${{ github.event.inputs.release == 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: ${{ github.workspace }}/packages/*.spm

      - name: Create Release
        if: ${{ github.event.inputs.release == 'true' }}
        uses: softprops/action-gh-release@v2.0.8
        with:
          name: "Package Release"
          tag_name: "v${{ github.run_number }}"
          prerelease: ${{ github.event_name == 'workflow_dispatch' }}
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            ${{ github.workspace }}/packages/*.spm
